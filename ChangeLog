Thu Oct 03 2019 Szymon Romik <szymon.romik@intel.com>

	* Version 1.8

	This release moves persistent array/vector/string/concurrent_hash_map
	out from experimental namespace and directory. It means that
	abovementioned containers are guaranteed to have stable API and on-media
	layout. They are placed now in include/libpmemobj++/container/ directory
	and pmem::obj namespace.

	This release introduces also a new experimental container - persistent
	segment vector with templated segment policies.

	New features:
	- experimental persistent segment vector container

	Bug fixes:
	- fixed insert method in persistent vector
	- fixed move assignment operator in persistent array

	Other changes:
	- extended error messages in exceptions
	- added examples with simplekv using persistent containers
	- added modifiers methods for persistent string
	- added template locks for concurrent_hash_map
	- added layout versioning for concurrent_hash_map

	Optimizations:
	- concurrent_hash_map insert method implemented with tx
	- optimized snapshotting in persistent vector/string

Wed Jun 26 2019 Szymon Romik <szymon.romik@intel.com>

	* Version 1.7

	This release introduces new experimental container - persistent
	concurrent hashmap and persistent string with limited functionality.

	Experimental features:
	- persistent concurrent hashmap
	- persistent string (constructors and modifiers)

	Bug fixes:
	- add option to force define IS_TRIVIALLY_COPYABLE
	- mark allocation_flag constructor as explicit
	- add missing include to v.hpp

Fri Mar 15 2019 Igor Chorążewicz <igor.chorazewicz@intel.com>

	* Version 1.6

	This release introduces ctl support, allocation flags, snapshot
	method and new experimental persistent container - vector.

	New features:
	- add support for pmemobj_ctl_set/get/exec
	- expose allocation flags in make_persistent(_atomic)
	- transaction: add snapshot method

	Experimental features:
	- persistent vector container

	Other changes:
	- automatically start transaction inside pmem::obj::experimental::array
	  modifier methods (assignment operators, swap and fill)
	- add const methods for pmem::obj::experimental::array
	- add Valgrind instrumentation support
	- remove experimental const_contiguous_iterator
	- add get with arguments method overload for v

	Bug fixes:
	- throw an exception when dropping pmem lock failed
	- fix crash when previous transaction failed to start
	- fix forwarding parameters to constructor in make_persistent_atomic

	Optimizations:
	- decrease number of persistent_ptr dereferences in
	  make_persistent_array

Tue Feb 19 2018 Marcin Ślusarz <marcin.slusarz@intel.com>

	* Version 1.5.1

	This release fixes minor bugs and improves documentation.

	Notable changes:
	- fix v swap, assignment operators and constructors
	- change conversion operator from T() to T&() in v<>
	- fix range_snapshotting initialization in array.hpp.
	- fix range_snapshotting_iterator bahaviour for snapshot_size == 0.

Fri Oct 26 2018 Marcin Ślusarz <marcin.slusarz@intel.com>

	* Version 1.5

	This is the first release of libpmemobj-cpp as a separate project.

	It introduces one persistent container - array, which has std::array
	like interface. Currently it is considered experimental and lives
	in experimental namespace.

	We have also cleaned up some function names that, in retrospect, were
	chosen poorly. Functions with old names are still there but are
	deprecated.

	Experimental features:
	- volatile resides on pmem class
	- persistent array container
