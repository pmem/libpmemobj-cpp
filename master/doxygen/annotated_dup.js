var annotated_dup =
[
    [ "pmem", "namespacepmem.html", [
      [ "detail", "namespacepmem_1_1detail.html", [
        [ "concurrent_skip_list", "classpmem_1_1detail_1_1concurrent__skip__list.html", "classpmem_1_1detail_1_1concurrent__skip__list" ],
        [ "contiguous_iterator", "structpmem_1_1detail_1_1contiguous__iterator.html", "structpmem_1_1detail_1_1contiguous__iterator" ],
        [ "range_snapshotting_iterator", "structpmem_1_1detail_1_1range__snapshotting__iterator.html", "structpmem_1_1detail_1_1range__snapshotting__iterator" ],
        [ "basic_contiguous_iterator", "structpmem_1_1detail_1_1basic__contiguous__iterator.html", "structpmem_1_1detail_1_1basic__contiguous__iterator" ],
        [ "ebr", "classpmem_1_1detail_1_1ebr.html", "classpmem_1_1detail_1_1ebr" ],
        [ "id_manager", "structpmem_1_1detail_1_1id__manager.html", "structpmem_1_1detail_1_1id__manager" ],
        [ "thread_id_type", "structpmem_1_1detail_1_1thread__id__type.html", "structpmem_1_1detail_1_1thread__id__type" ],
        [ "enumerable_thread_specific", "classpmem_1_1detail_1_1enumerable__thread__specific.html", "classpmem_1_1detail_1_1enumerable__thread__specific" ],
        [ "is_output_iterator", "structpmem_1_1detail_1_1is__output__iterator.html", null ],
        [ "is_input_iterator", "structpmem_1_1detail_1_1is__input__iterator.html", null ],
        [ "is_forward_iterator", "structpmem_1_1detail_1_1is__forward__iterator.html", null ],
        [ "is_bidirectional_iterator", "structpmem_1_1detail_1_1is__bidirectional__iterator.html", null ],
        [ "is_random_access_iterator", "structpmem_1_1detail_1_1is__random__access__iterator.html", null ],
        [ "self_relative_ptr_base_impl", "classpmem_1_1detail_1_1self__relative__ptr__base__impl.html", "classpmem_1_1detail_1_1self__relative__ptr__base__impl" ],
        [ "self_relative_accessor", "classpmem_1_1detail_1_1self__relative__accessor.html", "classpmem_1_1detail_1_1self__relative__accessor" ],
        [ "temp_value", "structpmem_1_1detail_1_1temp__value.html", null ],
        [ "volatile_state", "classpmem_1_1detail_1_1volatile__state.html", "classpmem_1_1detail_1_1volatile__state" ],
        [ "can_do_snapshot< std::atomic< obj::experimental::self_relative_ptr< T > > >", "structpmem_1_1detail_1_1can__do__snapshot_3_01std_1_1atomic_3_01obj_1_1experimental_1_1self__relative__ptr_3_01T_01_4_01_4_01_4.html", "structpmem_1_1detail_1_1can__do__snapshot_3_01std_1_1atomic_3_01obj_1_1experimental_1_1self__relative__ptr_3_01T_01_4_01_4_01_4" ],
        [ "can_do_snapshot", "structpmem_1_1detail_1_1can__do__snapshot.html", "structpmem_1_1detail_1_1can__do__snapshot" ],
        [ "transaction_base", "classpmem_1_1detail_1_1transaction__base.html", "classpmem_1_1detail_1_1transaction__base" ]
      ] ],
      [ "obj", "namespacepmem_1_1obj.html", [
        [ "experimental", "namespacepmem_1_1obj_1_1experimental.html", [
          [ "atomic_persistent_aware_ptr", "structpmem_1_1obj_1_1experimental_1_1atomic__persistent__aware__ptr.html", "structpmem_1_1obj_1_1experimental_1_1atomic__persistent__aware__ptr" ],
          [ "concurrent_map", "classpmem_1_1obj_1_1experimental_1_1concurrent__map.html", "classpmem_1_1obj_1_1experimental_1_1concurrent__map" ],
          [ "basic_dram_inline_string", "classpmem_1_1obj_1_1experimental_1_1basic__dram__inline__string.html", "classpmem_1_1obj_1_1experimental_1_1basic__dram__inline__string" ],
          [ "basic_inline_string", "classpmem_1_1obj_1_1experimental_1_1basic__inline__string.html", "classpmem_1_1obj_1_1experimental_1_1basic__inline__string" ],
          [ "total_sizeof", "structpmem_1_1obj_1_1experimental_1_1total__sizeof.html", "structpmem_1_1obj_1_1experimental_1_1total__sizeof" ],
          [ "total_sizeof< basic_inline_string< CharT, Traits > >", "structpmem_1_1obj_1_1experimental_1_1total__sizeof_3_01basic__inline__string_3_01CharT_00_01Traits_01_4_01_4.html", "structpmem_1_1obj_1_1experimental_1_1total__sizeof_3_01basic__inline__string_3_01CharT_00_01Traits_01_4_01_4" ],
          [ "total_sizeof< basic_dram_inline_string< CharT, Traits > >", "structpmem_1_1obj_1_1experimental_1_1total__sizeof_3_01basic__dram__inline__string_3_01CharT_00_01Traits_01_4_01_4.html", "structpmem_1_1obj_1_1experimental_1_1total__sizeof_3_01basic__dram__inline__string_3_01CharT_00_01Traits_01_4_01_4" ],
          [ "mpsc_queue", "classpmem_1_1obj_1_1experimental_1_1mpsc__queue.html", "classpmem_1_1obj_1_1experimental_1_1mpsc__queue" ],
          [ "radix_tree", "classpmem_1_1obj_1_1experimental_1_1radix__tree.html", "classpmem_1_1obj_1_1experimental_1_1radix__tree" ],
          [ "self_relative_ptr", "classpmem_1_1obj_1_1experimental_1_1self__relative__ptr.html", "classpmem_1_1obj_1_1experimental_1_1self__relative__ptr" ],
          [ "v", "classpmem_1_1obj_1_1experimental_1_1v.html", "classpmem_1_1obj_1_1experimental_1_1v" ]
        ] ],
        [ "segment_vector_internal", "namespacepmem_1_1obj_1_1segment__vector__internal.html", [
          [ "segment_iterator", "classpmem_1_1obj_1_1segment__vector__internal_1_1segment__iterator.html", "classpmem_1_1obj_1_1segment__vector__internal_1_1segment__iterator" ]
        ] ],
        [ "allocation_flag", "structpmem_1_1obj_1_1allocation__flag.html", "structpmem_1_1obj_1_1allocation__flag" ],
        [ "allocation_flag_atomic", "structpmem_1_1obj_1_1allocation__flag__atomic.html", "structpmem_1_1obj_1_1allocation__flag__atomic" ],
        [ "object_traits", "classpmem_1_1obj_1_1object__traits.html", "classpmem_1_1obj_1_1object__traits" ],
        [ "object_traits< void >", "classpmem_1_1obj_1_1object__traits_3_01void_01_4.html", "classpmem_1_1obj_1_1object__traits_3_01void_01_4" ],
        [ "standard_alloc_policy", "classpmem_1_1obj_1_1standard__alloc__policy.html", "classpmem_1_1obj_1_1standard__alloc__policy" ],
        [ "standard_alloc_policy< void >", "classpmem_1_1obj_1_1standard__alloc__policy_3_01void_01_4.html", "classpmem_1_1obj_1_1standard__alloc__policy_3_01void_01_4" ],
        [ "allocator", "classpmem_1_1obj_1_1allocator.html", "classpmem_1_1obj_1_1allocator" ],
        [ "condition_variable", "classpmem_1_1obj_1_1condition__variable.html", "classpmem_1_1obj_1_1condition__variable" ],
        [ "array", "structpmem_1_1obj_1_1array.html", "structpmem_1_1obj_1_1array" ],
        [ "basic_string", "classpmem_1_1obj_1_1basic__string.html", "classpmem_1_1obj_1_1basic__string" ],
        [ "concurrent_hash_map", "classpmem_1_1obj_1_1concurrent__hash__map.html", "classpmem_1_1obj_1_1concurrent__hash__map" ],
        [ "segment_vector", "classpmem_1_1obj_1_1segment__vector.html", "classpmem_1_1obj_1_1segment__vector" ],
        [ "vector", "classpmem_1_1obj_1_1vector.html", "classpmem_1_1obj_1_1vector" ],
        [ "defrag", "classpmem_1_1obj_1_1defrag.html", "classpmem_1_1obj_1_1defrag" ],
        [ "persistent_ptr", "classpmem_1_1obj_1_1persistent__ptr.html", "classpmem_1_1obj_1_1persistent__ptr" ],
        [ "mutex", "classpmem_1_1obj_1_1mutex.html", "classpmem_1_1obj_1_1mutex" ],
        [ "p", "classpmem_1_1obj_1_1p.html", "classpmem_1_1obj_1_1p" ],
        [ "pool", "classpmem_1_1obj_1_1pool.html", "classpmem_1_1obj_1_1pool" ],
        [ "persistent_ptr< void >", "classpmem_1_1obj_1_1persistent__ptr_3_01void_01_4.html", "classpmem_1_1obj_1_1persistent__ptr_3_01void_01_4" ],
        [ "persistent_ptr< const void >", "classpmem_1_1obj_1_1persistent__ptr_3_01const_01void_01_4.html", "classpmem_1_1obj_1_1persistent__ptr_3_01const_01void_01_4" ],
        [ "persistent_ptr_base", "classpmem_1_1obj_1_1persistent__ptr__base.html", "classpmem_1_1obj_1_1persistent__ptr__base" ],
        [ "pool_base", "classpmem_1_1obj_1_1pool__base.html", "classpmem_1_1obj_1_1pool__base" ],
        [ "shared_mutex", "classpmem_1_1obj_1_1shared__mutex.html", "classpmem_1_1obj_1_1shared__mutex" ],
        [ "slice", "classpmem_1_1obj_1_1slice.html", "classpmem_1_1obj_1_1slice" ],
        [ "basic_string_view", "classpmem_1_1obj_1_1basic__string__view.html", "classpmem_1_1obj_1_1basic__string__view" ],
        [ "timed_mutex", "classpmem_1_1obj_1_1timed__mutex.html", "classpmem_1_1obj_1_1timed__mutex" ],
        [ "basic_transaction", "classpmem_1_1obj_1_1basic__transaction.html", "classpmem_1_1obj_1_1basic__transaction" ],
        [ "flat_transaction", "classpmem_1_1obj_1_1flat__transaction.html", "classpmem_1_1obj_1_1flat__transaction" ]
      ] ],
      [ "pool_error", "classpmem_1_1pool__error.html", null ],
      [ "pool_invalid_argument", "classpmem_1_1pool__invalid__argument.html", null ],
      [ "transaction_error", "classpmem_1_1transaction__error.html", null ],
      [ "lock_error", "classpmem_1_1lock__error.html", null ],
      [ "transaction_alloc_error", "classpmem_1_1transaction__alloc__error.html", null ],
      [ "transaction_out_of_memory", "classpmem_1_1transaction__out__of__memory.html", null ],
      [ "transaction_free_error", "classpmem_1_1transaction__free__error.html", null ],
      [ "transaction_scope_error", "classpmem_1_1transaction__scope__error.html", null ],
      [ "manual_tx_abort", "classpmem_1_1manual__tx__abort.html", null ],
      [ "layout_error", "classpmem_1_1layout__error.html", null ],
      [ "ctl_error", "classpmem_1_1ctl__error.html", null ],
      [ "defrag_error", "classpmem_1_1defrag__error.html", "classpmem_1_1defrag__error" ]
    ] ],
    [ "std", null, [
      [ "hash< pmem::obj::p< T > >", "structstd_1_1hash_3_01pmem_1_1obj_1_1p_3_01T_01_4_01_4.html", "structstd_1_1hash_3_01pmem_1_1obj_1_1p_3_01T_01_4_01_4" ],
      [ "atomic< pmem::obj::experimental::self_relative_ptr< T > >", "structstd_1_1atomic_3_01pmem_1_1obj_1_1experimental_1_1self__relative__ptr_3_01T_01_4_01_4.html", "structstd_1_1atomic_3_01pmem_1_1obj_1_1experimental_1_1self__relative__ptr_3_01T_01_4_01_4" ],
      [ "numeric_limits< pmem::obj::p< T > >", "structstd_1_1numeric__limits_3_01pmem_1_1obj_1_1p_3_01T_01_4_01_4.html", "structstd_1_1numeric__limits_3_01pmem_1_1obj_1_1p_3_01T_01_4_01_4" ],
      [ "less< pmem::obj::p< T > >", "structstd_1_1less_3_01pmem_1_1obj_1_1p_3_01T_01_4_01_4.html", "structstd_1_1less_3_01pmem_1_1obj_1_1p_3_01T_01_4_01_4" ]
    ] ]
];