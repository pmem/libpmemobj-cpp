<map id="libpmemobj++/detail/temp_value.hpp" name="libpmemobj++/detail/temp_value.hpp">
<area shape="rect" id="node1" title="template class for caching objects." alt="" coords="228,5,367,47"/>
<area shape="rect" id="node2" href="$segment__vector_8hpp.html" title="A persistent version of segment vector implementation." alt="" coords="209,288,370,329"/>
<area shape="rect" id="node8" href="$vector_8hpp.html" title="Vector container with std::vector compatible interface." alt="" coords="302,95,463,136"/>
<area shape="rect" id="node3" href="$enumerable__thread__specific_8hpp.html" title="A persistent version of thread&#45;local storage." alt="" coords="183,377,396,419"/>
<area shape="rect" id="node4" href="$concurrent__hash__map_8hpp.html" title="A persistent version of concurrent hash map implementation Ref: https://arxiv.org/abs/1509...." alt="" coords="5,474,184,515"/>
<area shape="rect" id="node5" href="$concurrent__skip__list__impl_8hpp.html" title="Persistent memory aware implementation of the concurrent skip list." alt="" coords="209,467,370,523"/>
<area shape="rect" id="node7" href="$mpsc__queue_8hpp.html" title="Implementation of persistent multi producer single consumer queue." alt="" coords="394,474,577,515"/>
<area shape="rect" id="node6" href="$concurrent__map_8hpp.html" title="Persistent memory aware implementation of Intel TBB concurrent_map." alt="" coords="198,571,381,612"/>
<area shape="rect" id="node9" href="$basic__string_8hpp.html" title="String container with std::basic_string compatible interface." alt="" coords="513,191,674,233"/>
<area shape="rect" id="node12" href="$segment__vector__policies_8hpp.html" title="A persistent version of segment vector implementation." alt="" coords="327,184,489,240"/>
<area shape="rect" id="node10" href="$string_8hpp.html" title="String typedefs for common character types." alt="" coords="513,288,674,329"/>
<area shape="rect" id="node11" href="$radix__tree_8hpp.html" title="Implementation of persistent radix tree." alt="" coords="502,377,685,419"/>
</map>
