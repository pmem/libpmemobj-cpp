# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2021, Intel Corporation

#
# Dockerfile - a 'recipe' for Docker to build an image of fedora-based
#              environment prepared for running libpmemobj-cpp tests.
#

# Pull base image
FROM registry.hub.docker.com/library/centos:8
MAINTAINER igor.chorazewicz@intel.com

# Set required environment variables
ENV OS centos
ENV OS_VER 8
ENV PACKAGE_MANAGER rpm
ENV NOTTY 1

# Additional parameters to build docker without building components
ARG SKIP_VALGRIND_BUILD
ARG SKIP_PMDK_BUILD

RUN dnf update -y
RUN dnf install -y epel-release
RUN dnf install -y 'dnf-command(config-manager)'
RUN dnf config-manager --set-enabled powertools

# Install basic tools
RUN dnf update -y \
 && dnf install -y \
	asciidoc \
	autoconf \
	automake \
	bash-completion \
	clang \
	cmake \
	daxctl-devel \
	doxygen \
	gcc \
	gdb \
	git \
	json-c-devel \
	keyutils-libs-devel \
	kmod-devel \
	libatomic \
	libtool \
	libudev-devel \
	libunwind-devel \
	libuuid-devel \
	make \
	man \
	ncurses-devel \
	ndctl-devel \
	open-sans-fonts \
	pandoc \
	passwd \
	perl-Text-Diff \
	python3 \
	rpm-build \
	rpm-build-libs \
	rpmdevtools \
	sudo \
	tar \
	tbb-devel \
	wget \
	which \
	xmlto \
 && dnf clean all

# Install valgrind
COPY install-valgrind.sh install-valgrind.sh
RUN ./install-valgrind.sh

# Install pmdk
COPY install-pmdk.sh install-pmdk.sh
RUN ./install-pmdk.sh rpm

# Add user
ENV USER user
ENV USERPASS pass
RUN useradd -m $USER
RUN echo $USERPASS | passwd $USER --stdin
RUN gpasswd wheel -a $USER
USER $USER
