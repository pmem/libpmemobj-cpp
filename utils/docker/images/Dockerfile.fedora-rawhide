# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2021, Intel Corporation

#
# Dockerfile - a 'recipe' for Docker to build an image of fedora-based
#              environment prepared for running libpmemobj-cpp tests.
#              PMDK (libpmem & libpmemobj) are installed from dnf repo.
#

# Pull base image
FROM fedora:rawhide
MAINTAINER igor.chorazewicz@intel.com

# Set required environment variables
ENV OS fedora
ENV OS_VER rawhide
ENV PACKAGE_MANAGER rpm
ENV NOTTY 1

# Additional parameters to build docker without building components
ARG SKIP_VALGRIND_BUILD
ARG SKIP_PMDK_BUILD

# Base development packages
ARG BASE_DEPS="\
	cmake \
	gcc \
	gcc-c++ \
	git \
	make"

# Dependencies for compiling libpmemobj-cpp project
ARG LIBPMEMOBJ_CPP_DEPS="\
	libatomic \
	libpmemobj-devel \
	tbb-devel"

# pmem's Valgrind (optional; valgrind-devel may be used instead)
ARG VALGRIND_DEPS="\
	autoconf \
	automake"

# Examples (optional)
ARG EXAMPLES_DEPS="\
	ncurses-devel \
	SFML-devel"

# Documentation (optional)
ARG DOC_DEPS="\
	doxygen"

# Tests (optional)
ARG TESTS_DEPS="\
	gdb \
	libpmem-devel \
	libunwind-devel \
	pmempool"

# Misc for our builds/CI (optional)
ARG MISC_DEPS="\
	clang \
	perl-Text-Diff \
	pkgconf \
	sudo"

ARG REDUNDANT_DEPS="\
	bash-completion \
	open-sans-fonts \
	passwd \
	tar \
	xmlto \
	asciidoc \
	json-c-devel \
	kmod-devel \
	libtool \
	libudev-devel \
	libuuid-devel \
	libpmem-devel \
	cracklib \
	cracklib-dicts \
	wget"

# Update packages and install basic tools
RUN dnf update -y \
 && dnf install -y \
	asciidoc \
	${BASE_DEPS} \
	${LIBPMEMOBJ_CPP_DEPS} \
	${PMDK_DEPS} \
	${VALGRIND_DEPS} \
	${EXAMPLES_DEPS} \
	${DOC_DEPS} \
	${TESTS_DEPS} \
	${COVERITY_DEPS} \
	${MISC_DEPS} \
 && dnf clean all

# Install valgrind
COPY install-valgrind.sh install-valgrind.sh
RUN ./install-valgrind.sh

# Add user
ENV USER user
ENV USERPASS pass
RUN useradd -m $USER
RUN echo "$USER:$USERPASS" | chpasswd
RUN gpasswd wheel -a $USER
USER $USER
