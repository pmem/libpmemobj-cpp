# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2020, Intel Corporation

#
# Dockerfile - a 'recipe' for Docker to build an image of environment
#              prepared for running libpmemobj-cpp tests.
#

# Pull base image
FROM opensuse/leap:latest
MAINTAINER szymon.romik@intel.com

# Update the OS
RUN zypper dup -y

# Update all packages
RUN zypper update -y

# Install basic tools
RUN zypper install -y \
	asciidoc \
	autoconf \
	automake \
	bash-completion \
	clang \
	cmake \
	doxygen \
	fdupes \
	gcc \
	gdb \
	git \
	keyutils-devel \
	libjson-c-devel \
	libkmod-devel \
	libndctl-devel \
	libtool \
	libudev-devel \
	libunwind-devel \
	libuuid-devel \
	make \
	man \
	ncurses-devel \
	pandoc \
	perl-Text-Diff \
	'pkgconfig(bash-completion)' \
	python3 \
	rpm-build \
	rpmdevtools \
	sudo \
	tar \
	tbb-devel \
	wget \
	which \
	xmlto
RUN zypper clean all

# Install libndctl
COPY install-libndctl.sh install-libndctl.sh
RUN ./install-libndctl.sh opensuse

# Install valgrind
COPY install-valgrind.sh install-valgrind.sh
RUN ./install-valgrind.sh

# Install pmdk
COPY install-pmdk.sh install-pmdk.sh
RUN ./install-pmdk.sh rpm

# Add user
ENV USER user
ENV USERPASS p1a2s3s4
ENV PFILE ./password
RUN useradd -m $USER
RUN echo $USERPASS > $PFILE
RUN echo $USERPASS >> $PFILE
RUN passwd $USER < $PFILE
RUN rm -f $PFILE
RUN sed -i 's/# %wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) NOPASSWD: ALL/g' /etc/sudoers
RUN groupadd wheel
RUN gpasswd wheel -a $USER
USER $USER

# Set required environment variables
ENV OS opensuse-leap
ENV OS_VER latest
ENV PACKAGE_MANAGER rpm
ENV NOTTY 1

