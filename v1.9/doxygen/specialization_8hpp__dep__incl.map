<map id="libpmemobj++/detail/specialization.hpp" name="libpmemobj++/detail/specialization.hpp">
<area shape="rect" id="node2" href="$persistent__pool__ptr_8hpp_source.html" title="libpmemobj++/detail\l/persistent_pool_ptr.hpp" alt="" coords="43,355,205,397"/>
<area shape="rect" id="node4" href="$p_8hpp.html" title="Resides on pmem property template. " alt="" coords="203,102,343,129"/>
<area shape="rect" id="node18" href="$persistent__ptr_8hpp.html" title="Persistent smart pointer. " alt="" coords="627,259,792,300"/>
<area shape="rect" id="node26" href="$persistent__ptr__base_8hpp.html" title="Base class for persistent_ptr. " alt="" coords="397,95,563,136"/>
<area shape="rect" id="node3" href="$concurrent__hash__map_8hpp.html" title="A persistent version of concurrent hash map implementation Ref: https://arxiv.org/abs/1509.02235. " alt="" coords="231,1092,409,1133"/>
<area shape="rect" id="node5" href="$pext_8hpp.html" title="Convenience extensions for the resides on pmem property template. " alt="" coords="602,638,761,665"/>
<area shape="rect" id="node14" href="$pool_8hpp.html" title="C++ pmemobj pool. " alt="" coords="316,184,473,211"/>
<area shape="rect" id="node6" href="$allocator_8hpp.html" title="Persistent memory aware allocator. " alt="" coords="510,727,693,754"/>
<area shape="rect" id="node7" href="$array_8hpp.html" title="Array container with std::array compatible interface. " alt="" coords="819,720,981,761"/>
<area shape="rect" id="node8" href="$basic__string_8hpp.html" title="String container with std::basic_string compatible interface. " alt="" coords="582,817,743,858"/>
<area shape="rect" id="node11" href="$segment__vector_8hpp.html" title="A persistent version of segment vector implementation. " alt="" coords="911,913,1073,955"/>
<area shape="rect" id="node13" href="$vector_8hpp.html" title="Vector container with std::vector compatible interface. " alt="" coords="1005,720,1166,761"/>
<area shape="rect" id="node10" href="$segment__vector__policies_8hpp.html" title="A persistent version of segment vector implementation. " alt="" coords="911,809,1073,865"/>
<area shape="rect" id="node9" href="$string_8hpp.html" title="String typedefs for common character types. " alt="" coords="582,913,743,955"/>
<area shape="rect" id="node12" href="$enumerable__thread__specific_8hpp.html" title="A persistent version of thread&#45;local storage. " alt="" coords="635,1003,848,1044"/>
<area shape="rect" id="node15" href="$defrag_8hpp.html" title="Defragmentation class. " alt="" coords="433,266,602,293"/>
<area shape="rect" id="node16" href="$volatile__state_8hpp.html" title="A volatile state for persistent objects. " alt="" coords="144,720,283,761"/>
<area shape="rect" id="node17" href="$make__persistent__atomic_8hpp.html" title="Persistent_ptr atomic allocation functions for objects. " alt="" coords="783,541,987,583"/>
<area shape="rect" id="node25" href="$transaction_8hpp.html" title="C++ pmemobj transactions. " alt="" coords="241,638,439,665"/>
<area shape="rect" id="node19" href="$check__persistent__ptr__array_8hpp.html" title="Compile time type check for make_persistent. " alt="" coords="952,348,1099,404"/>
<area shape="rect" id="node24" href="$utils_8hpp.html" title="Libpmemobj C++ utils. " alt="" coords="1303,363,1460,389"/>
<area shape="rect" id="node20" href="$make__persistent_8hpp.html" title="Persistent_ptr transactional allocation functions for objects. " alt="" coords="1061,549,1291,575"/>
<area shape="rect" id="node22" href="$make__persistent__array_8hpp.html" title="Persistent_ptr allocation functions for arrays. " alt="" coords="1114,452,1318,493"/>
<area shape="rect" id="node23" href="$make__persistent__array__atomic_8hpp.html" title="Atomic persistent_ptr allocation functions for arrays. " alt="" coords="783,452,987,493"/>
<area shape="rect" id="node21" href="$temp__value_8hpp.html" title="temp_value template class for caching objects. " alt="" coords="1079,631,1217,672"/>
</map>
